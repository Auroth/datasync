drop table if exists auth_task;
drop table if exists auth_user;
drop table if exists auth_role;
drop table if exists auth_resource;
drop table if exists auth_user_role;
drop table if exists auth_role_role;
drop table if exists auth_role_resource;

create table auth_task (
	id bigint generated by default as identity,
	title varchar(128) not null,
	describe varchar(255),
	user_id bigint not null,
    primary key (id)
);

create table auth_user (
	id bigint generated by default as identity,
	login_name varchar(64) not null unique,
	name varchar(64) not null,
	password varchar(255) not null,
	salt varchar(64) not null,
	register_date timestamp not null,
	primary key (id)
);


create table auth_role (
	id bigint generated by default as identity,
	parent_id bigint,
	name varchar(64) not null unique,
	type varchar(64) ,
	active varchar(64) ,
	describe varchar(64) ,
	register_date timestamp not null,
	--foreign key(parent_id) references auth_role(id),
	primary key (id)
);

create table auth_user_role (
	user_id bigint not null,
	role_id bigint not null,
	relation varchar(64) ,
	foreign key(user_id) references auth_user(id) on delete cascade on update cascade,
	foreign key(role_id) references auth_role(id) on delete cascade on update cascade,
	primary key (user_id, role_id)
);

create table auth_role_role (
	role_id bigint not null,
	other_role_id bigint not null,
	relation varchar(64) not null,
	foreign key(role_id) references auth_role(id) on delete cascade on update cascade,
	foreign key(other_role_id) references auth_role(id) on delete cascade on update cascade,
	primary key (role_id, other_role_id)
);
-- alter table auth_rr_map add primary key (role_id, other_role_id);

create table auth_resource (
	id bigint generated by default as identity,
	name varchar(64) not null unique,
	delegate_id varchar(256) unique,
	type varchar(64) ,
	active varchar(64) ,
	describe varchar(255),
	parent_id bigint,
	register_date timestamp not null,
	--foreign key(parent_id) references auth_resource(id),
	primary key (id)
);


create table auth_role_resource (
	role_id bigint not null,
	resource_id bigint not null,
	operate_type varchar(64),
	foreign key(role_id) references auth_role(id) on delete cascade on update cascade,
	foreign key(resource_id) references auth_resource(id) on delete cascade on update cascade,
	primary key (role_id, resource_id)
);
-- alter table auth_ro_map add primary key (role_id, resource_id);