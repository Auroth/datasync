package org.zhangpan.datasync.db.test;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.h2.jdbcx.JdbcConnectionPool;

public class MenTest {

	String sourceURL = "jdbc:h2:file:~/.h2/datasync;AUTO_SERVER=TRUE";// H2DB
	String user = "sa";
	String password = "";
	JdbcConnectionPool cp = null;

	public MenTest() {
		try {
			Class.forName("org.h2.Driver");// HSQLDB Driver
		} catch (Exception e) {
			e.printStackTrace();
		}
		cp = JdbcConnectionPool.create(sourceURL, user,
				password);
	}

	public void initTable() {
		try {

			// Connection conn = DriverManager.getConnection(sourceURL, user,
			// password);// 把驱动放入连接
			Connection conn = cp.getConnection();
			Statement stmt = conn.createStatement();
			// 创建一个 Statement 对象来将 SQL 语句发送到数据库。
			// stmt.executeUpdate("DELETE FROM mytable WHERE name=/'NO.2/'");
			// 执行方法找到一个与 methodName 属性同名的方法，并在目标上调用该方法。
			// stmt.execute("CREATE TABLE idtable(id INT,name VARCHAR(100));");
			String createStr = "create table sync_task ("
					+ "id bigint generated by default as identity,"
					+ "dst_path varchar(256) not null,"
					+ "src_path varchar(256),"
					+ "event_type varchar(16),"
					+ "event_date timestamp," + "primary key (id));";
			stmt.execute("drop table if exists sync_task;");
			stmt.execute(createStr);
			stmt.close();
			conn.close();
		} catch (SQLException sqle) {
			sqle.printStackTrace();
			System.out.println("SQL ERROR!");
		}
	}

	public void runInsertDelete() {
		try {
			Connection conn = cp.getConnection();
			Statement stmt = conn.createStatement();
			// 创建一个 Statement 对象来将 SQL 语句发送到数据库。
			// stmt.executeUpdate("DELETE FROM mytable WHERE name=/'NO.2/'");
			// 执行方法找到一个与 methodName 属性同名的方法，并在目标上调用该方法。
			// stmt.execute("CREATE TABLE idtable(id INT,name VARCHAR(100));");
			stmt.execute("INSERT INTO sync_task VALUES(1, '/abc/','/bcd/', 'rename', '2012-06-04 02:00:00')");
			stmt.execute("INSERT INTO sync_task VALUES(2, '/abc/','/bcd/', 'rename', '2012-06-04 02:00:00')");
			String sql = "INSERT INTO sync_task(dst_path, src_path, event_type, event_date) "
					+ "VALUES ('/abc/','/bcd/', 'rename', '2012-06-04 02:00:00')";
			stmt.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
			stmt.close();
			conn.close();
		} catch (SQLException sqle) {
			sqle.printStackTrace();
			System.out.println("SQL ERROR!");
		}
	}

	public void query(String SQL) {
		try {
			Connection conn = cp.getConnection();
			Statement stmt = conn.createStatement();// 创建一个 Statement 对象来将 SQL
													// 语句发送到数据库。
			ResultSet rset = stmt.executeQuery(SQL);// 执行方法找到一个与 methodName
													// 属性同名的方法，并在目标上调用该方法。
			while (rset.next()) {
				System.out.println("  " + rset.getString("id"));
				System.out.println("  " + rset.getString("dst_path"));
				System.out.println("  " + rset.getString("src_path"));
				System.out.println("  " + rset.getString("event_type"));
				System.out.println("  " + rset.getString("event_date"));
			}
			rset.close();
			stmt.close();
			conn.close();
		} catch (SQLException sqle) {
			sqle.printStackTrace();
			System.err.println(sqle);
		}
	}

	public static void main(String[] args) {
		MenTest mt = new MenTest();
		mt.initTable();
		mt.runInsertDelete();
		mt.query("SELECT * FROM sync_task");
	}
}